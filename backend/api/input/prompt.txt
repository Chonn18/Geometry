I want to convert the problem to a formal like the following example with the formal geometric descriptions built in below.
Here is an example of a geometry problem in natural and formal language:
 - geometry problem: "Let ABCD be a cyclic quadrilateral. Let P, Q and R be the feet of perpendiculars from D to lines BC, CA and AB, respectively. Show that PQ = QR if and only if the bisectors of angles ABC and ADC meet on segment AC."
 - formal: "a b c = triangle a b c; o = circle o a b c; b1 = on_circle b1 o a, on_bline b1 c a; d1 = on_circle d1 o a, on_bline d1 c a; x = on_line x b b1, on_line x a c; d = on_line d d1 x, on_circle d o a; p = foot p d b c; q = foot q d c a; r = foot r d a b ? cong p q q r"

The following lines are information in formal and their explanations. In the Description section is the basic explanation. If the expression is different and the information in natural language is similar, the result will be converted to the same formal.
formal : Description
Q1 = on_line Q A1, let Q1 be a point on ray QA1
Q = on_line A A1, Q be points on segments AA1
X= angle bisector(A, B, C) X= angle mirror(A, B, C) : Construct a point X on the angle bisector of ∠ABC
X = circle(A, B, C) : Construct a point X such that BC is the bisector of ∠ABX
A, B, C, D = eq_quadrilateral() : Construct point X as the circumcenter of A, B, C
A, B, C, D = eq_trapezoid() : Construct quadrilateral ABCD with AD = BC
X= eqtriangle(B, C) Xeqangle2(A, B, C) : Construct trapezoid ABCD with AD = BC
A,B,C,D = eqdia_equadrilateral() : Construct X such that XBC is an equilateral triangle
X= eqdistance(A, B, C) X = foot(A, B, C) : Construct X such that ∠BAX= ∠XCB
X = free : Construct quadrilateral ABCD with AC = BD
X= incenter(A, B, C) : Construct X such that XA = BC
X,Y,Z,I= incenter2(A, B, C) : Construct X as the foot of A on BC
X = excenter(A, B, C) : Construct a free point X
X,Y,Z,I= excenter2(A,B,C) : Construct X as the incenter of ABC
X = centroid (A,B,C) : Construct I as the incenter of ABC with touchpoints X, Y, Z
X,Y,Z,I= midpointcircle(A,B,C) : Construct X as the excenter of ABC
A,B,C = isos() : Construct X as the excenter of ABC with touchpoints X,Y,Z
X= tangent(O, A) : Construct X as the centroid of ABC
X = midpoint(A, B) : Construct X, Y, Z as the midpoints of triangle ABC, and I as the circumcenter of XYZ Construct A, B, C such that AB = AC
X = mirror(A, B) : Construct X such that OA is perpendicular to AX
X= rotate90(A, B) : Construct X as the midpoint of AB
X=on_aline(A, B, C, D, E) : Construct X such that B is the midpoint of AX
X= on_bline(X, A, B) : Construct X such that AXB is a right isosceles triangle
X=on_circle(O, A) : Construct X such that ∠XAB= ∠CDE
X = on_line(A, B) : Construct X on the perpendicular bisector of AB
X=on_pline(A, B, C) : Construct X such that OA = OX
X = on_tline(A, B, C) : Construct X on line AB
X= orthocenter(A, B, C) : Construct X such that XA is parallel to BC
X = parallelogram(A, B, C) : Construct X such that XA is perpendicular to BC Construct X as the orthocenter of ABC
A, B, C, D, E pentagon() : Construct X such that ABCX is a parallelogram
A, B, C, D = quadrilateral() : Construct pentagon ABCDE
A, B, C, D = trapezoid() : Construct quadrilateral ABCD
A, B, C = r_triangle() : Construct right trapezoid ABCD
A, B, C, D rectangle() : Construct right triangle ABC
X= reflect(A, B, C) : Construct rectangle ABCD
A, B, C = risos() : Construct X as the reflection of A about BC
X= angle(A, B, a) : Construct right isosceles triangle ABC
A, B = segment() : Construct X such that ∠ABX= a
X = shift(B, C, D) : Construct two distinct points A, B
XY square(A, B) : Construct point X such that XB-CD and XC-BD
A, B, C, D = init_square() : Construct X, Y such that XYAB is a square
A, B, C, D = trapezoid() : Construct square ABCD
A, B, C = triangle() : Construct trapezoid ABCD
A, B, C triangle12() : Construct triangle ABC
X,Y,Z,I= 2L1C(A, B, C, O) : Construct trianglel ABC with AB:AC = 1:2
X, Y, Z = 3PEQ(A, B, C) : Construct circle center I that touches line AC and line BC and circle (O, A) at X, Y, Z
X, Y = trisect(A, B, C) : Construct X, Y, Z on three sides of triangle ABC such that Y is the midpoint of XZ
X, Y trisegment(A, B) : Construct X, Y on AC such that BX and BY trisect ZABC
X = on_dia(A, B) : Construct X, Y on segment AB such that AX=XY=YB Construct point X such that AX is perpendicular to BX
A, B, C ieqtriangle() : Construct equilateral triangle ABC
X, Y, Z, T= cc_tangent(O, A, W, B) : Construct common tangents of circles (O, A) and (W, B) with touchpoints X, Y for one tangent and Z, T for the other.
X= eqangle3(A, B, D, E, F) : Construct point X such that ∠AXB = ∠EDF
X, Y tangent(A, O, B) : Construct points X, Y as the tangent touch points from A to circle (O, B)
X= intersect(f, g) : Construct point X as the intersection of two functions f() and g() where f() and g() is any of the above functions that returns more than one possible construction.
